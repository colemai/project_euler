# frozen_string_literal: true
# ruby --enable-frozen-string-literal-debug script.rb
require 'benchmark'
require 'pry'
require 'set'

############## 
## Problem
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


############## 
## Result
# Ans = 4613732
# Time1 = 0.000000   0.000000   0.000000 (  0.000037)
# Time2 = 0.000000   0.000000   0.000000 (  0.000010)


############## 
## Methods

time1 = Benchmark.measure do
	def add_even_fibs_up_to(number)
		x = 1
		y = 2
		z = 3
		final = 0
		while y <= number do
			final += y
			x = y + z
			y = x + z
			z = x + y
		end
		puts final
	end
	add_even_fibs_up_to(4000000)
end

time2 = Benchmark.measure do
	def add_even_fibs_up_to(number)
		total = 0
		x, y = 0, 1
		while y <= number
	    x, y = y, x + y
    	total += x if x % 2 == 0
    end
    puts total
	end
	add_even_fibs_up_to(4000000)
end

############## 
## Call Methods

# puts "Time1 #{time} vs Time2 #{time2}"
for time in local_variables
	if time =~ /time/
		puts time
		puts eval(time.to_s)
	end
end